version: '3.8'

services:
  c2pa-assistant:
    build: .
    container_name: c2pa-generator-assistant
    ports:
      - "${PORT:-8080}:8080"
    volumes:
      # Persistent data storage
      # Using named volumes to avoid macOS path issues
      - c2pa-data:/app/data
      - c2pa-logs:/app/logs
      # Development: mount source for hot reload (comment out for production)
      # - ./backend/src:/app/src
    # Docker secrets (recommended for production)
    # Uncomment to use Docker secrets instead of environment variables
    # secrets:
    #   - github_token
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=${PORT:-8080}
      # AI Configuration (priority: Ollama > OpenAI > Fallback)
      - USE_LOCAL_LLM=${USE_LOCAL_LLM:-false}
      - OLLAMA_URL=${OLLAMA_URL}
      - OLLAMA_API_KEY=${OLLAMA_API_KEY}
      - AI_MODEL=${AI_MODEL:-qwen3-coder:480b-cloud}
      # OpenWebUI (for chat storage/persistence)
      - OPENWEBUI_URL=https://openwebui.matthewstevens.org/api
      - OPENWEBUI_API_KEY=${OPENWEBUI_API_KEY}
      # OpenAI (alternative)
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DATABASE_URL=sqlite:///app/data/app.db
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost:5173}
      - MAX_FILE_SIZE=${MAX_FILE_SIZE:-50000000}
      - COMPANY_NAME=Sanmarcsoft LLC
      - COMPANY_LOCATION=United States
      - GITHUB_TOKEN=${GITHUB_TOKEN}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:8080/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - c2pa-network

# Docker secrets configuration (for production)
# Uncomment and configure when using Docker secrets
# secrets:
#   github_token:
#     file: ./secrets/GITHUB_TOKEN
#   openai_api_key:
#     file: ./secrets/openai_api_key.txt

volumes:
  c2pa-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data
  c2pa-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/logs

networks:
  c2pa-network:
    driver: bridge
